name: Prerelease

# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron: "5 * * * *"
on: [push, workflow_dispatch]

jobs:
  prerelease:
    name: Prerelease

    runs-on: macOS-latest

    steps:

      - name: init
        uses: actions/checkout@v1
      
#       - name: get sha
#         id: sha
#         shell: bash
#         run: echo "::set-output name=value::$(cat sha.txt)"

      - name: clone
        env:
          sha: ${{steps.sha.outputs.value}} 
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone --depth 1 ${{secrets.GIT_ADDRESS1}} .
        shell: bash

      - name: get package
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: version
     
  tools:
    needs: [prerelease]

    runs-on: ${{matrix.os}}
    
    strategy:
      fail-fast: false
      matrix:
        node: [16]
        os: [ubuntu-latest, macOS-11, windows-latest]

    steps:
      - name: init
        uses: actions/checkout@master

      - name: set node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          
      - name: set python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8" 

#       - name: get sha
#         id: sha
#         shell: bash
#         run: echo "::set-output name=value::$(cat sha.txt)"

      - name: clone
        env:
          sha: ${{steps.sha.outputs.value}} 
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone --depth 1 ${{secrets.GIT_ADDRESS1}} .
        shell: bash

      - name: install
        run: |
         npm i

#       - name: install electron-builder with macos latest
#         if: startsWith(matrix.os, 'macOS')
#         run: npm i electron-builder@21.2.0

      - name: win
        if: startsWith(matrix.os, 'windows')
        run: |
          npm run win
          npm run build
          
      - name: linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          npm run win
          npm run build
        
      - name: build:pure
        if: startsWith(matrix.os, 'macOS')
        run: npm run build:pure
      
      # - name: Install Perl Modules
      #   if: startsWith(matrix.os, 'macOS')
      #   run: |
      #     sudo cpan install Mac::Finder::DSStore
        
      - name: mac:dmg
        if: startsWith(matrix.os, 'macOS')
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm run mac:dmg
        
      - name: mac:mas
        if: startsWith(matrix.os, 'macOS')
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm run mac:mas

      - name: get package version
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: ./package.json
          key: version

      - name: get package productName
        id: package1
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: productName

      - name: Upload Prerelease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{steps.package.outputs.version}}-alpha
          name: v${{steps.package.outputs.version}}-alpha
          draft: false
          prerelease: true
          fail_on_unmatched_files: false
          append_body: true
          files: |
            build/*.exe
            build/*.msi
            build/latest.yml
            build/*.dmg
            build/*.zip
            build/*.AppImage
            buildl/*.pkg
            build/latest-mac.yml
            build/*.deb
            build/*.rpm
            build/*.apk
            build/latest-linux.yml


#       - name: deploy
#         run: npm run upload:null

          
      # - name: Remove builder-debug.yml
      #   shell: bash
      #   run: |
      #     [ -f ./build/builder-debug.yml ] && rm ./build/builder-debug.yml
          
      # - name: Upload Prerelease
      #   uses: Ireoo/upload-release@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.cache.outputs.upload_url }}
      #     dir: build
      #     exts: '["exe", "dmg", "zip", "AppImage", "deb", "rpm", "apk", "msi", "pkg", "appx", "yml"]'
      #     suffix: _tools
          
#       - name: Upload to tools.integem.com
#         run: npm run upload
