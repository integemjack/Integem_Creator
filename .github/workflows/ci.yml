name: CI

on: [push]

jobs:
  release:
    name: Release

    runs-on: macos

    steps:

      - name: init
        uses: actions/checkout@v1

      - name: get package
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: version

      - name: create release
        id: release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{steps.package.outputs.version}}
          release_name: V${{steps.package.outputs.version}}
          draft: false
          prerelease: false

      - name: init cache
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          upload_url: ${{steps.release.outputs.upload_url}}
          github_sha: ${{github.sha}}
        run: |
          git clone $git_cache cache
          cd cache
          echo "$upload_url" > $github_sha.txt
          git add $github_sha.txt
          git commit -m "$github_sha"
          git push
     
  notools:
    runs-on: ${{matrix.os}}
    
    strategy:
      matrix:
        node: [12]
        os: [ubuntu-latest]

    steps:
      - name: init
        uses: actions/checkout@master
        with:
          node-version: ${{ matrix.node }}

      - name: clone
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone ${{secrets.GIT_ADDRESS}} .
        shell: bash
      
      - name: install
        run: npm i
      
      - name: build
        run: npm run build:chromebook
      
      - name: deploy
        run: npm run upload:null

      - name: get package version
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: ./package.json
          key: version

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{steps.package.outputs.version}}-${{matrix.node}}-${{matrix.os}}-noTools
#           release_name: 'V${{steps.package.outputs.version}} [node${{ matrix.node }}] [${{matrix.os}}] [noTools]'
#           draft: false
#           prerelease: false
    
      - name: init cache
        id: cache
        shell: bash
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          github_sha: ${{github.sha}}
        run: |
          git clone $git_cache cache
          cd cache
          echo "::set-output name=upload_url::$(cat $github_sha.txt)"

#       - name: save Release
#         shell: bash
#         env:
#           url: ${{ steps.create_release.outputs.upload_url }}
#         run: |
#           echo '$url'
#           echo '$url' > url.txt
          
      - name: Upload Release linux app
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/integem-creator_${{ steps.package.outputs.version }}_amd64.deb
          asset_name: integem-creator_${{ steps.package.outputs.version }}_amd64_notools.deb
          asset_content_type: application/x-executable
          
      - name: Upload Release linux zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/Integem iCreator_linux_${{ steps.package.outputs.version }}.zip
          asset_name: Integem iCreator_linux_${{ steps.package.outputs.version }}_notools.zip
          asset_content_type: application/zip

  tools:
#     needs: [release]

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        node: [12]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: init
        uses: actions/checkout@master
        with:
          node-version: ${{ matrix.node }}

      - name: clone
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone ${{secrets.GIT_ADDRESS}} .
        shell: bash

      - name: install
        run: npm i

      - name: install electron-builder with macos latest
        if: startsWith(matrix.os, 'macOS-latest')
        run: npm i electron-builder@21.2.0

      - name: build
        run: npm run build

      - name: get package version
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: ./package.json
          key: version

      #      - name: upload macos zip
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'macOS-latest')
      #        with:
      #          name: ${{matrix.node}}-${{matrix.os}}
      #          path: ./build/mac
      #
      #      - name: upload ubuntu zip
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'ubuntu-latest')
      #        with:
      #          name: ${{matrix.node}}-${{matrix.os}}
      #          path: ./build/linux-unpacked
      #
      #      - name: upload windows zip
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'windows-latest')
      #        with:
      #          name: ${{matrix.node}}-${{matrix.os}}
      #          path: ./build/win-unpacked
      #
      #      - name: upload macos app
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'macOS-latest')
      #        with:
      #          name: ${{steps.package.outputs.version}}-${{matrix.node}}-${{matrix.os}}-app
      #          path: ./build/Integem iCreator-${{steps.package.outputs.version}}.dmg
      #
      #      - name: upload ubuntu app
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'ubuntu-latest')
      #        with:
      #          name: ${{steps.package.outputs.version}}-${{matrix.node}}-${{matrix.os}}-app
      #          path: ./build/integem-creator_${{steps.package.outputs.version}}_amd64.deb
      #
      #      - name: upload windows app
      #        uses: actions/upload-artifact@master
      #        if: startsWith(matrix.os, 'windows-latest')
      #        with:
      #          name: ${{steps.package.outputs.version}}-${{matrix.node}}-${{matrix.os}}-app
      #          path: ./build/Integem iCreator Setup ${{steps.package.outputs.version}}.exe
      - name: deploy
        run: npm run upload:null
      
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{steps.package.outputs.version}}-${{matrix.node}}-${{matrix.os}}
#           release_name: 'V${{steps.package.outputs.version}} [node${{ matrix.node }}] [${{matrix.os}}]'
#           draft: false
#           prerelease: false

      - name: init cache
        id: cache
        shell: bash
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          github_sha: ${{github.sha}}
        run: |
          git clone $git_cache cache
          cd cache
          echo "::set-output name=upload_url::$(cat $github_sha.txt)"

      - name: Upload Release windows zip
        if: startsWith(matrix.os, 'windows-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/Integem iCreator_win_${{ steps.package.outputs.version }}.zip
          asset_name: Integem iCreator_win_${{ steps.package.outputs.version }}_tools.zip
          asset_content_type: application/zip

      - name: Upload Release macos zip
        if: startsWith(matrix.os, 'macos-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/Integem iCreator_mac_${{ steps.package.outputs.version }}.zip
          asset_name: Integem iCreator_mac_${{ steps.package.outputs.version }}_tools.zip
          asset_content_type: application/zip

      - name: Upload Release linux zip
        if: startsWith(matrix.os, 'ubuntu-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/Integem iCreator_linux_${{ steps.package.outputs.version }}.zip
          asset_name: Integem iCreator_linux_${{ steps.package.outputs.version }}_tools.zip
          asset_content_type: application/zip

      - name: Upload Release windows app
        if: startsWith(matrix.os, 'windows-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          asset_path: build/Integem iCreator Setup ${{ steps.package.outputs.version }}.exe
          asset_name: Integem iCreator Setup ${{ steps.package.outputs.version }}_tools.exe
          asset_content_type: application/x-executable

      - name: Upload Release macos app
        if: startsWith(matrix.os, 'macos-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/Integem iCreator-${{ steps.package.outputs.version }}.dmg
          asset_name: Integem iCreator-${{ steps.package.outputs.version }}_tools.dmg
          asset_content_type: application/x-executable

      - name: Upload Release linux app
        if: startsWith(matrix.os, 'ubuntu-latest')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/integem-creator_${{ steps.package.outputs.version }}_amd64.deb
          asset_name: integem-creator_${{ steps.package.outputs.version }}_amd64_tools.deb
          asset_content_type: application/x-executable
